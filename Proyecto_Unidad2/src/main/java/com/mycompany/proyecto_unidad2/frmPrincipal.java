/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto_unidad2;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Fox
 */
public class frmPrincipal extends javax.swing.JFrame {

    DecimalFormat df = new DecimalFormat("#.######");
    
    /**
     * Creates new form frmPrincipal
     */
    public frmPrincipal() {
        initComponents();
        configurarTabla();
    }

    private void configurarTabla() {
    String[] columnas = {"Iter", "Xi", "Xf", "Xr", "f(Xr)", "Ea(%)"};
    DefaultTableModel modelo = new DefaultTableModel(null, columnas);
    tblResultado.setModel(modelo);
    

     
}
    
    private double f(double x) {
    String func = cmbFuncion.getSelectedItem().toString();
    switch (func) {
        case "x^2-2": return x*x - 2;
        case "x^3-5x+3": return x*x*x - 5*x + 3;
        case "e^-x-x": return Math.exp(-x) - x;
        case "x^3-2x^2+4": return x*x*x - 2*x*x + 4;
        case "cos(x)-x": return Math.cos(x) - x;
        default: return 0;
    }
}
    private double df(double x) {
    String func = cmbFuncion.getSelectedItem().toString();
    switch (func) {
        case "x^2-2": return 2*x;
        case "x^3-5x+3": return 3*x*x - 5;
        case "e^-x-x": return -Math.exp(-x) - 1;
        case "x^3-2x^2+4": return 3*x*x - 4*x;
        case "cos(x)-x": return -Math.sin(x) - 1;
        default: return 1;
    }
}
    
    private List<IterRow> metodoBiseccion(double xi, double xf, double eaMax) {
    List<IterRow> lista = new ArrayList<>();
    double fi = f(xi), ff = f(xf), xr=0, fr, ea=0;
    if (fi*ff>0) return lista; // no hay raíz
    Double xrAnt = null;
    int iter=0;
    while (true) {
        iter++;
        xr=(xi+xf)/2;
        fr=f(xr);
        if (xrAnt!=null) ea=Math.abs((xr-xrAnt)/xr)*100;
        lista.add(new IterRow(iter,xi,xf,xr,fr,(xrAnt==null?null:ea)));
        if (fr==0 || (xrAnt!=null && ea<=eaMax)) break;
        if (fi*fr<0) { xf=xr; ff=fr; } else { xi=xr; fi=fr; }
        xrAnt=xr;
        if(iter>200) break;
    }
    return lista;
}
    private List<IterRow> metodoReglaFalsa(double xi, double xf, double eaMax) {
    List<IterRow> lista = new ArrayList<>();
    double fi=f(xi), ff=f(xf), xr=0, fr, ea=0;
    if (fi*ff>0) return lista;
    Double xrAnt=null; int iter=0;
    while (true) {
        iter++;
        xr=(xi*ff - xf*fi)/(ff-fi);
        fr=f(xr);
        if (xrAnt!=null) ea=Math.abs((xr-xrAnt)/xr)*100;
        lista.add(new IterRow(iter,xi,xf,xr,fr,(xrAnt==null?null:ea)));
        if (fr==0 || (xrAnt!=null && ea<=eaMax)) break;
        if (fi*fr<0) { xf=xr; ff=fr; } else { xi=xr; fi=fr; }
        xrAnt=xr;
        if(iter>200) break;
    }
    return lista;
}
    private List<IterRow> metodoNewton(double x0, double eaMax) {
    List<IterRow> lista=new ArrayList<>();
    Double xrAnt=null; int iter=0; double xr=x0;
    while(true){
        iter++;
        double fx=f(xr), dfx=df(xr);
        if(dfx==0) break;
        double x1=xr - fx/dfx;
        double ea=(xrAnt==null)?0:Math.abs((x1-xrAnt)/x1)*100;
        lista.add(new IterRow(iter,xr,null,x1,f(x1),(xrAnt==null?null:ea)));
        if(xrAnt!=null && ea<=eaMax) break;
        xrAnt=x1; xr=x1;
        if(iter>200) break;
    }
    return lista;
}
    private List<IterRow> metodoSecante(double x0,double x1,double eaMax){
    List<IterRow> lista=new ArrayList<>();
    int iter=0; Double xr=null;
    while(true){
        iter++;
        double f0=f(x0), f1=f(x1);
        if(f1-f0==0) break;
        xr=x1 - f1*(x1-x0)/(f1-f0);
        double ea=Math.abs((xr-x1)/xr)*100;
        lista.add(new IterRow(iter,x0,x1,xr,f(xr),ea));
        if(ea<=eaMax) break;
        x0=x1; x1=xr;
        if(iter>200) break;
    }
    return lista;
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtXi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtXf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEaMax = new javax.swing.JTextField();
        btmBiseccion = new javax.swing.JButton();
        btmReglaF = new javax.swing.JButton();
        btmNewton = new javax.swing.JButton();
        btmSecante = new javax.swing.JButton();
        btmTodo = new javax.swing.JButton();
        btmLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultado = new javax.swing.JTable();
        cmbFuncion = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Proyecto Unidad2");
        setResizable(false);

        jLabel1.setText("Funcion");

        jLabel2.setText("X Inicial ");

        jLabel3.setText("X Final");

        jLabel4.setText("eaMax");

        btmBiseccion.setText("Biseccion");
        btmBiseccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmBiseccionActionPerformed(evt);
            }
        });

        btmReglaF.setText("Regla Falsa");
        btmReglaF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmReglaFActionPerformed(evt);
            }
        });

        btmNewton.setText("Newton");
        btmNewton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmNewtonActionPerformed(evt);
            }
        });

        btmSecante.setText("Secante");
        btmSecante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmSecanteActionPerformed(evt);
            }
        });

        btmTodo.setText("Mostra Todo");
        btmTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmTodoActionPerformed(evt);
            }
        });

        btmLimpiar.setText("Limpiar");
        btmLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmLimpiarActionPerformed(evt);
            }
        });

        tblResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Iter", "Xi", "Xf", "Xr", "f(Xr)", "Ea(%)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblResultado);

        cmbFuncion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "x^2-2", "x^3-5x+3", "e^-x-x", "x^3−x−2", "cos(x)-x" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addComponent(btmTodo))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(52, 52, 52)
                            .addComponent(btmLimpiar))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btmNewton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btmBiseccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btmReglaF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btmSecante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(txtEaMax))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtXf, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtXi, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtXi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtXf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEaMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btmBiseccion)
                            .addComponent(btmReglaF))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btmNewton)
                            .addComponent(btmSecante))
                        .addGap(18, 18, 18)
                        .addComponent(btmTodo)
                        .addGap(18, 18, 18)
                        .addComponent(btmLimpiar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btmBiseccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmBiseccionActionPerformed
       llenarTabla(metodoBiseccion(
        Double.parseDouble(txtXi.getText()),
        Double.parseDouble(txtXf.getText()),
        Double.parseDouble(txtEaMax.getText())
    ));
                  
    }//GEN-LAST:event_btmBiseccionActionPerformed

    private void btmReglaFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmReglaFActionPerformed
        llenarTabla(metodoReglaFalsa(
        Double.parseDouble(txtXi.getText()),
        Double.parseDouble(txtXf.getText()),
        Double.parseDouble(txtEaMax.getText())
    ));
                     
    }//GEN-LAST:event_btmReglaFActionPerformed

    private void btmNewtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmNewtonActionPerformed
         llenarTabla(metodoNewton(
        Double.parseDouble(txtXi.getText()),
        Double.parseDouble(txtEaMax.getText())
    ));
    }//GEN-LAST:event_btmNewtonActionPerformed

    private void btmSecanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmSecanteActionPerformed
         llenarTabla(metodoSecante(
        Double.parseDouble(txtXi.getText()),
        Double.parseDouble(txtXf.getText()),
        Double.parseDouble(txtEaMax.getText())
    ));
    }//GEN-LAST:event_btmSecanteActionPerformed

    private void btmTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmTodoActionPerformed
        DefaultTableModel modelo=(DefaultTableModel) tblResultado.getModel();
    modelo.setRowCount(0);
    modelo.addRow(new Object[]{"Biseccion","","","","",""});
    llenarTabla(metodoBiseccion(Double.parseDouble(txtXi.getText()),Double.parseDouble(txtXf.getText()),Double.parseDouble(txtEaMax.getText())));
    modelo.addRow(new Object[]{"Regla Falsa","","","","",""});
    llenarTabla(metodoReglaFalsa(Double.parseDouble(txtXi.getText()),Double.parseDouble(txtXf.getText()),Double.parseDouble(txtEaMax.getText())));
    modelo.addRow(new Object[]{"Newton","","","","",""});
    llenarTabla(metodoNewton(Double.parseDouble(txtXi.getText()),Double.parseDouble(txtEaMax.getText())));
    modelo.addRow(new Object[]{"Secante","","","","",""});
    llenarTabla(metodoSecante(Double.parseDouble(txtXi.getText()),Double.parseDouble(txtXf.getText()),Double.parseDouble(txtEaMax.getText())));
                                      
    }//GEN-LAST:event_btmTodoActionPerformed

    private void btmLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmLimpiarActionPerformed
        ((DefaultTableModel) tblResultado.getModel()).setRowCount(0);
    }//GEN-LAST:event_btmLimpiarActionPerformed

    private void llenarTabla(List<IterRow> lista) {
    DefaultTableModel modelo=(DefaultTableModel) tblResultado.getModel();
    for (IterRow r: lista) {
        modelo.addRow(new Object[]{
            r.iter,
            r.xi==null?"":df.format(r.xi),
            r.xf==null?"":df.format(r.xf),
            r.xr==null?"":df.format(r.xr),
            r.fx==null?"":df.format(r.fx),
            r.ea==null?"":df.format(r.ea)
        });
    }
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btmBiseccion;
    private javax.swing.JButton btmLimpiar;
    private javax.swing.JButton btmNewton;
    private javax.swing.JButton btmReglaF;
    private javax.swing.JButton btmSecante;
    private javax.swing.JButton btmTodo;
    private javax.swing.JComboBox<String> cmbFuncion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblResultado;
    private javax.swing.JTextField txtEaMax;
    private javax.swing.JTextField txtXf;
    private javax.swing.JTextField txtXi;
    // End of variables declaration//GEN-END:variables
}
